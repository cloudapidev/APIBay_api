<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">


    <!-- #Start#  GNum database mybatis template #-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:/META-INF/spring/mybatis-configuration.xml"/>
        <property name="mapperLocations">
            <list>
                <value>classpath*:/com/globalroam/api/dao/**/*Mapper.xml</value>
            </list>
        </property>
        <!--<property name="plugins">-->
            <!--<array>-->
                <!--<bean class="com.grapi.pagehelper.PageHelper">-->
                    <!--<property name="properties">-->
                        <!--<value>-->
                        <!--&lt;!&ndash; 4.0.0以后版本可以不设置该参数 &ndash;&gt;-->
                            <!--&lt;!&ndash;dialect=mysql&ndash;&gt;-->
                            <!--&lt;!&ndash; 该参数默认为false &ndash;&gt;-->
                            <!--&lt;!&ndash; 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 &ndash;&gt;-->
                            <!--&lt;!&ndash; 和startPage中的pageNum效果一样&ndash;&gt;-->
                            <!--offsetAsPageNum=true-->
                            <!--&lt;!&ndash; 该参数默认为false &ndash;&gt;-->
                            <!--&lt;!&ndash; 设置为true时，使用RowBounds分页会进行count查询 &ndash;&gt;-->
                            <!--rowBoundsWithCount=true-->
                            <!--&lt;!&ndash; 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 &ndash;&gt;-->
                            <!--&lt;!&ndash; （相当于没有执行分页查询，但是返回结果仍然是Page类型）&ndash;&gt;-->
                            <!--pageSizeZero=true-->
                            <!--&lt;!&ndash; 3.3.0版本可用 - 分页参数合理化，默认false禁用 &ndash;&gt;-->
                            <!--&lt;!&ndash; 启用合理化时，如果pageNum<1会查询第一页，如果pageNum>pages会查询最后一页 &ndash;&gt;-->
                            <!--&lt;!&ndash; 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据 &ndash;&gt;-->
                            <!--reasonable=true-->
                            <!--&lt;!&ndash; 3.5.0版本可用 - 为了支持startPage(Object params)方法 &ndash;&gt;-->
                            <!--&lt;!&ndash; 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 &ndash;&gt;-->
                            <!--&lt;!&ndash; 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值 &ndash;&gt;-->
                            <!--&lt;!&ndash; 不理解该含义的前提下，不要随便复制该配置 &ndash;&gt;-->
                            <!--params=pageNum=offset;pageSize=limit;-->
                            <!--&lt;!&ndash; 支持通过Mapper接口参数来传递分页参数 &ndash;&gt;-->
                            <!--supportMethodsArguments=true-->
                            <!--&lt;!&ndash; always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page &ndash;&gt;-->
                            <!--returnPageInfo=check-->
                        <!--</value>-->
                    <!--</property>-->
                <!--</bean>-->
            <!--</array>-->
        <!--</property>-->
    </bean>
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>
    <!-- #End#  GNum database mybatis template #-->

    <!-- GNum database jdbc template -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!-- #Start#  log mybatis template #  -->
    <!--<bean id="sqlSessionFactory_log" class="org.mybatis.spring.SqlSessionFactoryBean" lazy-init="true">-->
    <!--<property name="dataSource" ref="dataSource_1"/>-->
    <!--<property name="configLocation" value="classpath:/META-INF/spring/mybatis-configuration.xml"/>-->
    <!--<property name="mapperLocations" value="classpath:/com/globalroam/api/dao/log/LogMapper.xml"/>-->
    <!--</bean>-->
    <!--<bean id="sqlSessionTemplate_log" class="org.mybatis.spring.SqlSessionTemplate" lazy-init="true">-->
    <!--<constructor-arg index="0" ref="sqlSessionFactory_log"/>-->
    <!--</bean>-->
    <!-- #End#  log mybatis template #  -->

    <!-- #Start#  api management mybatis template  # -->
    <bean id="sqlSessionFactory_2" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource_2"/>
        <property name="configLocation" value="classpath:/META-INF/spring/mybatis-configuration.xml"/>
        <property name="mapperLocations">
            <list>
                <value>classpath*:/com/globalroam/api/**/dao/**/*Mapper.xml</value>
            </list>
        </property>
    </bean>
    <bean id="sqlSessionTemplate_2" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory_2"/>
    </bean>
    <!-- #End#  api management mybatis template  # -->


    <!--  mapper scanner business-->
    <bean class="com.grapi.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.globalroam.api.business.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <property name="properties">
            <value>
                UUID=true
                IDENTITY=true
                ORDER=before
            </value>
        </property>
    </bean>

    <!--  mapper scanner api management-->
    <bean class="com.grapi.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.globalroam.api.system.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_2"></property>
        <property name="properties">
            <value>
                UUID=true
                IDENTITY=true
                ORDER=before
            </value>
        </property>
    </bean>
    <!--  mapper scanner api management-->
    <bean class="com.grapi.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.globalroam.api.developer.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_2"></property>
        <property name="properties">
            <value>
                UUID=true
                IDENTITY=true
                ORDER=before
            </value>
        </property>
    </bean>
</beans>
